Let's try this again. The program should contain
three different kinds of dataclasses:

1. A dataclass containing a section of normal markdown text.
2. A dataclass containing a source-code listing:
    A. All listings begin and end with ``` markers.
    B. Programming-language listings use ``` followed directly by the name of the language
    C. If there is no language name, then the listing represents output from a program.
3. A dataclass containing a URL to a github repo, which is represented in
   the markdown file as:
   %%%
   code: URL
   %%%

There needs to be a function that takes a Path to a markdown file. It reads
the file and parses it into the above dataclasses. The result should be re-assemblable into
the original file, to the point where it compares exactly to the original.
